{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","useState","toDos","setTodos","toDo","setTodo","className","value","onChange","e","target","type","placeholder","onClick","id","Date","now","text","status","map","obj","console","log","checked","filter","obj2","name","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iOA2EeA,MAvEf,WACE,MAA0BC,mBAAS,IAAnC,mBAAOC,EAAP,KAAcC,EAAd,KACA,EAAwBF,mBAAS,IAAjC,mBAAOG,EAAP,KAAaC,EAAb,KACA,OACE,sBAAKC,UAAU,MAAf,UACE,sBAAKA,UAAU,cAAf,UACE,6CAAqB,OAChB,IACP,sBAAKA,UAAU,aAAf,UACE,uBACA,8EAAuC,OAClC,IACP,sBAAKA,UAAU,QAAf,UACE,uBACEC,MAAOH,EACPI,SAAU,SAACC,GAAD,OAAOJ,EAAQI,EAAEC,OAAOH,QAClCI,KAAK,OACLC,YAAY,mCAEd,mBACEC,QAAS,kBACPV,EAAS,GAAD,mBAAKD,GAAL,CAAY,CAAEY,GAAIC,KAAKC,MAAOC,KAAMb,EAAMc,QAAQ,OAE5DZ,UAAU,cAJZ,SAMG,MACE,OACA,IACP,sBAAKA,UAAU,QAAf,UACG,IACAJ,EAAMiB,KAAI,SAACC,GACV,OACE,sBAAKd,UAAU,OAAf,UACE,sBAAKA,UAAU,OAAf,UACE,uBACEE,SAAU,SAACC,GACTY,QAAQC,IAAIb,EAAEC,OAAOa,SACrBF,QAAQC,IAAIF,GACZjB,EACED,EAAMsB,QAAO,SAACC,GAIZ,OAHIA,EAAKX,KAAOM,EAAIN,KAClBW,EAAKP,OAAST,EAAEC,OAAOa,SAElBE,OAIblB,MAAOa,EAAIF,OACXP,KAAK,WACLe,KAAK,GACLZ,GAAG,KAEL,kCAAKM,EAAIH,KAAT,OAAoB,OACf,IACP,sBAAKX,UAAU,QAAf,UACE,mBAAGA,UAAU,eAAb,eAAkC,OAC7B,UAGT,IACHJ,EAAMiB,KAAI,SAACC,GACV,OAAIA,EAAIF,OACC,mCAAME,EAAIH,KAAV,OAEF,WAEJ,QC1DEU,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.4db86c32.chunk.js","sourcesContent":["import React from 'react'\nimport './components/ToDo.css'\nimport { useState } from 'react'\n\nfunction App() {\n  const [toDos, setTodos] = useState([])\n  const [toDo, setTodo] = useState('')\n  return (\n    <div className=\"app\">\n      <div className=\"mainHeading\">\n        <h1> ToDo List </h1>{' '}\n      </div>{' '}\n      <div className=\"subHeading\">\n        <br />\n        <h2> Whoop, it 's Wednesday üåù ‚òï </h2>{' '}\n      </div>{' '}\n      <div className=\"input\">\n        <input\n          value={toDo}\n          onChange={(e) => setTodo(e.target.value)}\n          type=\"text\"\n          placeholder=\"üñäÔ∏è Add item...\"\n        />\n        <i\n          onClick={() =>\n            setTodos([...toDos, { id: Date.now(), text: toDo, status: false }])\n          }\n          className=\"fas fa-plus\"\n        >\n          {' '}\n        </i>{' '}\n      </div>{' '}\n      <div className=\"todos\">\n        {' '}\n        {toDos.map((obj) => {\n          return (\n            <div className=\"todo\">\n              <div className=\"left\">\n                <input\n                  onChange={(e) => {\n                    console.log(e.target.checked)\n                    console.log(obj)\n                    setTodos(\n                      toDos.filter((obj2) => {\n                        if (obj2.id === obj.id) {\n                          obj2.status = e.target.checked\n                        }\n                        return obj2\n                      }),\n                    )\n                  }}\n                  value={obj.status}\n                  type=\"checkbox\"\n                  name=\"\"\n                  id=\"\"\n                />\n                <p> {obj.text} </p>{' '}\n              </div>{' '}\n              <div className=\"right\">\n                <i className=\"fas fa-times\"> </i>{' '}\n              </div>{' '}\n            </div>\n          )\n        })}{' '}\n        {toDos.map((obj) => {\n          if (obj.status) {\n            return <h1> {obj.text} </h1>\n          }\n          return null\n        })}\n      </div>{' '}\n    </div>\n  )\n}\n\nexport default App\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}